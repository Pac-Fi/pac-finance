{
  "address": "0x167395B40dC7da75d4996Bb44a448D01ECa973Ca",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchangeRateProxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DecimalsAboveLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DecimalsNotEqual",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRateProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_validityDuration",
          "type": "uint256"
        }
      ],
      "name": "setValidityDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validityDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6aac938f074e5fc41817acb228e772e9f9b1afe1d1204aeb125d09b3b095c12c",
  "receipt": {
    "to": null,
    "from": "0xAEC7030b1d0352ccF1B7B946FD6a0AB6ECEa325E",
    "contractAddress": "0x167395B40dC7da75d4996Bb44a448D01ECa973Ca",
    "transactionIndex": 5,
    "gasUsed": "552737",
    "logsBloom": "0x
    "blockHash": "0x4ca75696021b3f158754e734976b7616ae60203f77c76ce8d38768cb9d5d70e7",
    "transactionHash": "0x6aac938f074e5fc41817acb228e772e9f9b1afe1d1204aeb125d09b3b095c12c",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 1281787,
        "transactionHash": "0x6aac938f074e5fc41817acb228e772e9f9b1afe1d1204aeb125d09b3b095c12c",
        "address": "0x167395B40dC7da75d4996Bb44a448D01ECa973Ca",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000aec7030b1d0352ccf1b7b946fd6a0ab6ecea325e"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0x4ca75696021b3f158754e734976b7616ae60203f77c76ce8d38768cb9d5d70e7"
      }
    ],
    "blockNumber": 1281787,
    "cumulativeGasUsed": "1261613",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x009E9B1eec955E9Fe7FE64f80aE868e661cb4729",
    "0x28c1576eb118f2Ccd02eF2e6Dbd732F5C8D2e86B"
  ],
  "numDeployments": 1,
  "solcInputHash": "a7c73bdea1bf719a337f0800f7ae562f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeRateProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DecimalsAboveLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecimalsNotEqual\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_validityDuration\",\"type\":\"uint256\"}],\"name\":\"setValidityDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validityDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"latestAnswer()\":{\"notice\":\"Calculates the current answer based on the aggregators.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ezETHOracle.sol\":\"ezETHOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@api3/airnode-protocol-v1/contracts/api3-server-v1/proxies/interfaces/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @dev See DapiProxy.sol for comments about usage\\ninterface IProxy {\\n    function read() external view returns (int224 value, uint32 timestamp);\\n\\n    function api3ServerV1() external view returns (address);\\n}\\n\",\"keccak256\":\"0x3ad69ef6ff3de4056ec43eb8b47465f3d896f88e95cfffb909a6d057b91db17b\",\"license\":\"MIT\"},\"@api3/contracts/v0.8/interfaces/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@api3/airnode-protocol-v1/contracts/api3-server-v1/proxies/interfaces/IProxy.sol\\\";\\n\",\"keccak256\":\"0x46e0969d4682b2dad5c56a5f278ee447a3085fcc66c4e8bd261ef9cdcccfdc0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/ezETHOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@api3/contracts/v0.8/interfaces/IProxy.sol\\\";\\nimport {ICLSynchronicityPriceAdapter} from \\\"./interfaces/ICLSynchronicityPriceAdapter.sol\\\";\\n\\ncontract ezETHOracle is Ownable, ICLSynchronicityPriceAdapter\\n{\\n    address public immutable ethProxy;\\n    address public immutable exchangeRateProxy;\\n\\n    uint256 public validityDuration = 1 days;\\n\\n    constructor(address _proxyAddress, address _exchangeRateProxy) {\\n        ethProxy = _proxyAddress;\\n        exchangeRateProxy = _exchangeRateProxy;\\n    }\\n\\n    function setValidityDuration(uint256 _validityDuration) external onlyOwner {\\n        validityDuration = _validityDuration;\\n    }\\n\\n    /// @inheritdoc ICLSynchronicityPriceAdapter\\n    function latestAnswer() public view virtual override returns (int256) {\\n        (int224 value, uint256 timestamp) = IProxy(ethProxy).read();\\n        require(\\n            block.timestamp - timestamp < validityDuration,\\n            \\\"price expired\\\"\\n        );\\n\\n        int224 exchangeRate;\\n        (exchangeRate, timestamp) = IProxy(exchangeRateProxy).read();\\n        require(\\n            block.timestamp - timestamp < validityDuration,\\n            \\\"exchange rate expired\\\"\\n        );\\n\\n        //convert decimals, api3 decimal is 18\\n        int256 convertedValue = int256(value) * int256(exchangeRate)/ 1e18 / 1e10;\\n        return convertedValue;\\n    }\\n\\n    function decimals() external pure returns (uint8) {\\n        return 8;\\n    }\\n}\\n\",\"keccak256\":\"0x1c1e27224f1e9be2dc5272aac12459e0804484ee3862a9412fbff9a18a15b323\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ICLSynchronicityPriceAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ICLSynchronicityPriceAdapter {\\n    /**\\n     * @notice Calculates the current answer based on the aggregators.\\n     */\\n    function latestAnswer() external view returns (int256);\\n\\n    error DecimalsAboveLimit();\\n    error DecimalsNotEqual();\\n}\\n\",\"keccak256\":\"0x87a1d48750e707ff0956ddfd5ab87494eadea3085b8f2df175478b8735cb302b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040526201518060015534801561001757600080fd5b5060405161095c38038061095c833981016040819052610036916100c2565b61003f33610056565b6001600160a01b039182166080521660a0526100f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100bd57600080fd5b919050565b600080604083850312156100d557600080fd5b6100de836100a6565b91506100ec602084016100a6565b90509250929050565b60805160a0516108346101286000396000818161013c01526102c001526000818161016301526101ac01526108346000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a611610076578063b549501d1161005b578063b549501d14610137578063dd4426ba1461015e578063f2fde38b1461018557600080fd5b8063715018a6146100f05780638da5cb5b146100f857600080fd5b8063313ce567146100a857806343aa9df7146100bc57806350d25bcd146100d1578063683ce032146100e7575b600080fd5b604051600881526020015b60405180910390f35b6100cf6100ca3660046105ce565b610198565b005b6100d96101a5565b6040519081526020016100b3565b6100d960015481565b6100cf61040d565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b3565b6101127f000000000000000000000000000000000000000000000000000000000000000081565b6101127f000000000000000000000000000000000000000000000000000000000000000081565b6100cf6101933660046105e7565b610421565b6101a06104d8565b600155565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b81526004016040805180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610624565b60015491935063ffffffff169150610250824261069c565b106102bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f707269636520657870697265640000000000000000000000000000000000000060448201526064015b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b81526004016040805180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610624565b60015463ffffffff9091169350909150610366834261069c565b106103cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f65786368616e676520726174652065787069726564000000000000000000000060448201526064016102b3565b60006402540be400670de0b6b3a764000083601b0b86601b0b6103f091906106b3565b6103fa919061076f565b610404919061076f565b95945050505050565b6104156104d8565b61041f6000610559565b565b6104296104d8565b73ffffffffffffffffffffffffffffffffffffffff81166104cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b3565b6104d581610559565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b3565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105e057600080fd5b5035919050565b6000602082840312156105f957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461061d57600080fd5b9392505050565b6000806040838503121561063757600080fd5b825180601b0b811461064857600080fd5b602084015190925063ffffffff8116811461066257600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156106ae576106ae61066d565b500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156106f4576106f461066d565b7f8000000000000000000000000000000000000000000000000000000000000000600087128682058812818416161561072f5761072f61066d565b6000871292508782058712848416161561074b5761074b61066d565b878505871281841616156107615761076161066d565b505050929093029392505050565b6000826107a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156107f9576107f961066d565b50059056fea264697066735822122090af779164cea5f4de6990e21cc153e0bc7a29697747f65f1eab6adf9e8bb42a64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a611610076578063b549501d1161005b578063b549501d14610137578063dd4426ba1461015e578063f2fde38b1461018557600080fd5b8063715018a6146100f05780638da5cb5b146100f857600080fd5b8063313ce567146100a857806343aa9df7146100bc57806350d25bcd146100d1578063683ce032146100e7575b600080fd5b604051600881526020015b60405180910390f35b6100cf6100ca3660046105ce565b610198565b005b6100d96101a5565b6040519081526020016100b3565b6100d960015481565b6100cf61040d565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b3565b6101127f000000000000000000000000000000000000000000000000000000000000000081565b6101127f000000000000000000000000000000000000000000000000000000000000000081565b6100cf6101933660046105e7565b610421565b6101a06104d8565b600155565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b81526004016040805180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610624565b60015491935063ffffffff169150610250824261069c565b106102bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f707269636520657870697265640000000000000000000000000000000000000060448201526064015b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b81526004016040805180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610624565b60015463ffffffff9091169350909150610366834261069c565b106103cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f65786368616e676520726174652065787069726564000000000000000000000060448201526064016102b3565b60006402540be400670de0b6b3a764000083601b0b86601b0b6103f091906106b3565b6103fa919061076f565b610404919061076f565b95945050505050565b6104156104d8565b61041f6000610559565b565b6104296104d8565b73ffffffffffffffffffffffffffffffffffffffff81166104cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b3565b6104d581610559565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b3565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105e057600080fd5b5035919050565b6000602082840312156105f957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461061d57600080fd5b9392505050565b6000806040838503121561063757600080fd5b825180601b0b811461064857600080fd5b602084015190925063ffffffff8116811461066257600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156106ae576106ae61066d565b500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156106f4576106f461066d565b7f8000000000000000000000000000000000000000000000000000000000000000600087128682058812818416161561072f5761072f61066d565b6000871292508782058712848416161561074b5761074b61066d565b878505871281841616156107615761076161066d565b505050929093029392505050565b6000826107a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156107f9576107f961066d565b50059056fea264697066735822122090af779164cea5f4de6990e21cc153e0bc7a29697747f65f1eab6adf9e8bb42a64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "latestAnswer()": {
        "notice": "Calculates the current answer based on the aggregators."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/ezETHOracle.sol:ezETHOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 179,
        "contract": "contracts/ezETHOracle.sol:ezETHOracle",
        "label": "validityDuration",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}